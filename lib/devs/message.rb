module DEVS
  # This class represents a message that belong to a {Model} through a {Port}.
  # It wraps the payload generated by a model output
  class Message
    attr_reader :payload, :port

    # @!attribute [r] payload
    #   @return [Object] Returns the payload

    # @!attribute [r] port
    #   @return [Port] Returns the associated port

    # Returns a new {Message} instance.
    #
    # @param payload [Object] the message payload
    # @param port [Port] the port associated with the message
    def initialize(payload, port)
       @payload = payload
       @port = port
    end

    # Returns the model that owns {#port}
    #
    # @return [Model] the model
    def host
      @port.host
    end

    def ==(other)
      @port == other.port
    end

    # @return [Array]
    def to_a
      [@payload, @port]
    end

    # @return [String]
    def to_s
      "message #{@payload}"
    end
  end
end
